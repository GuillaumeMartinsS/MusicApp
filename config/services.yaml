# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # Directory where medias uploaded by users goes :
    upload_directory: '%kernel.project_dir%/public/uploads'
    # argument for slug service
    app.slugger_to_lower: true

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # argument for slug service
    App\Service\MySlugger:
        arguments:
            $toLower: '%app.slugger_to_lower%'

    App\EventListener\SongListener:
        tags:
            -
                # The kind of event : here it is a doctrine entity listener event
                name: doctrine.orm.entity_listener
                # Name of the event : before update
                event: preUpdate
                # the entity with what we want to rely on
                entity: App\Entity\Song
                # method attribute is optional
                method: updateSong
            -
                # The kind of event : here it is a doctrine entity listener event
                name: doctrine.orm.entity_listener
                # Name of the event : before update
                event: prePersist
                 # the entity with what we want to rely on
                entity: App\Entity\Song
                # method attribute is optional
                method: updateSong

    App\EventListener\UserListener:
        tags:
            -
                name: doctrine.orm.entity_listener
                event: preUpdate
                entity: App\Entity\User
                method: updateUser
            -
                name: doctrine.orm.entity_listener
                event: prePersist
                entity: App\Entity\User
                method: updateUser

    App\EventListener\PlaylistListener:
        tags:
            -
                name: doctrine.orm.entity_listener
                event: preUpdate
                entity: App\Entity\Playlist
                method: updatePlaylist
            -
                name: doctrine.orm.entity_listener
                event: prePersist
                entity: App\Entity\Playlist
                method: updatePlaylist
    
    App\EventListener\GenreListener:
        tags:
            -
                name: doctrine.orm.entity_listener
                event: preUpdate
                entity: App\Entity\Genre
                method: updateGenre
            -
                name: doctrine.orm.entity_listener
                event: prePersist
                entity: App\Entity\Genre
                method: updateGenre
